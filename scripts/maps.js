import { Wall } from "./Wall.js";
import { Pellet } from "./Pellet.js";
import { PowerUp } from "./PowerUp.js";
import { Pacman } from "./pacman.js";
import { Directions, Ghost, Mode } from "./Ghost.js";

export const maps = [
  [
    ['1', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '2'],
    ['!', 's', '.', '.', '.', '.', '.', '{', '-', '-', '-', '-', '-', '-', '}', '!'],
    ['!', '.', '(', '-', '-', ')', '.', ' ', ' ', ' ', 'b', ' ', ' ', ' ', ' ', '!'],
    ['!', '.', '{', '-', '-', '}', '.', '1', '=', '=', 'd', '=', '=', '2', ' ', '!'],
    ['!', '.', '.', '.', '.', '.', '.', '!', ' ', ' ', ' ', ' ', ' ', '!', ' ', '!'],
    ['!', '.', '(', '-', '-', ')', '.', '!', 'i', '5', 'p', '5', 'c', '!', ' ', '!'],
    ['!', '.', '|', ' ', ' ', '|', '.', '4', '=', '=', '=', '=', '=', '3', ' ', '!'],
    ['!', '.', '{', '-', '-', '}', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '!'],
    ['!', 'w', '.', '.', '.', '.', '.', '(', '-', '-', '-', '-', '-', '-', ')', '!'],
    ['4', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '3']
  ],
  [
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5', '5', '5', '5', '5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5', '5'],
    ['5', '5', '5', '.', '(', '-', '-', '-', '-', ')', '.', '5', '5', '5', '5', '5', '5', '5', '.', '(', '-', '-', '-', '-', ')', '.', '5', '5', '5'],
    ['5', '5', '5', '.', '{', '-', '-', '-', '-', '}', '.', '5', '5', '5', '5', '5', '5', '5', '.', '{', '-', '-', '-', '-', '}', '.', '5', '5', '5'],
    ['5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '-', '-', ')', '.', '(', ')', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '(', ')', '.', '(', '-', '-', '-', ')', '.', '5'],
    ['5', '.', '{', '-', '-', '-', '}', '.', '|', '|', '.', '|', ' ', '|', ' ', '|', ' ', '|', '.', '|', '|', '.', '{', '-', '-', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '.', ' ', '.', '.', '|', '|', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', ')', '.', '(', ')', '.', '|', '|', '.', ' ', ' ', ' ', 'b', ' ', ' ', ' ', '.', '|', '|', '.', '(', ')', '.', '(', ')', '.', '5'],
    ['5', '.', '|', '|', '.', '|', '|', '.', '{', '}', '.', '1', '=', '=', 'd', '=', '=', '2', '.', '{', '}', '.', '|', '|', '.', '|', '|', '.', '5'],
    [' ', '.', '|', '|', '.', '|', '|', '.', 'w', '.', '.', '!', ' ', ' ', ' ', ' ', ' ', '!', '.', ' ', 'w', '.', '|', '|', '.', '|', '|', '.', ' '],
    ['5', '.', '|', '|', '.', '|', '|', '.', '(', ')', '.', '!', 'i', '5', 'p', '5', 'c', '!', '.', '(', ')', '.', '|', '|', '.', '|', '|', '.', '5'],
    ['5', '.', '{', '}', '.', '{', '}', '.', '|', '|', '.', '4', '=', '=', '=', '=', '=', '3', '.', '|', '|', '.', '{', '}', '.', '{', '}', '.', '5'],
    ['5', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', ' ', ' ', ' ', 's', ' ', ' ', ' ', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '-', '-', ')', '.', '|', '|', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '|', '|', '.', '(', '-', '-', '-', ')', '.', '5'],
    ['5', '.', '{', '-', '-', '-', '}', '.', '{', '}', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '{', '}', '.', '{', '-', '-', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '5', '5', '.', '(', '-', '-', '-', '-', ')', '.', '5', '5', '5', '5', '5', '5', '5', '.', '(', '-', '-', '-', '-', ')', '.', '5', '5', '5'],
    ['5', '5', '5', '.', '{', '-', '-', '-', '-', '}', '.', '5', '5', '5', '5', '5', '5', '5', '.', '{', '-', '-', '-', '-', '}', '.', '5', '5', '5'],
    ['5', '5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5', '5', '5', '5', '5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
  ],
  [
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '(', ')', '.', '(', '-', ')', '.', '(', '-', ')', '.', '(', ')', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '5'],
    ['5', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '{', '}', '.', '{', '-', '}', '.', '{', '-', '}', '.', '{', '}', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '(', ')', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '(', ')', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '5'],
    ['5', '.', '{', '-', ')', '|', '.', '{', '-', '-', '}', '.', '{', '}', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '{', '}', '.', '{', '-', '-', '}', '.', '|', '(', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', ' ', 'b', ' ', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '5'],
    ['5', '5', '5', '.', '{', '}', '.', '5', '5', '5', '5', '.', '(', ')', '.', '1', '=', '=', 'd', '=', '=', '2', '.', '(', ')', '.', '5', '5', '5', '5', '.', '{', '}', '.', '5', '5', '5'],
    [' ', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', ' '],
    ['5', '5', '5', '.', '(', ')', '.', '(', '-', '-', ')', '.', '|', '|', '.', '!', 'i', '5', 'p', '5', 'c', '!', '.', '|', '|', '.', '(', '-', '-', ')', '.', '(', ')', '.', '5', '5', '5'],
    ['5', '5', '5', '.', '|', '|', '.', '{', '-', '-', '}', '.', '{', '}', '.', '4', '=', '=', '=', '=', '=', '3', '.', '{', '}', '.', '{', '-', '-', '}', '.', '|', '|', '.', '5', '5', '5'],
    ['5', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', ' ', 's', ' ', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '}', '|', '.', '(', '-', '-', ')', '.', '(', ')', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '(', ')', '.', '(', '-', '-', ')', '.', '|', '{', '-', ')', '.', '5'],
    ['5', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '{', '}', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '{', '}', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '5'],
    ['5', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '(', ')', '.', '5', '5', '5', '5', '5', '5', '5', '.', '(', ')', '.', '(', '-', '-', ')', '.', '(', '-', '-', ')', '.', '5'],
    ['5', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '{', '}', '.', '5', '5', '5', '5', '5', '5', '5', '.', '{', '}', '.', '{', '-', '-', '}', '.', '{', '-', '-', '}', '.', '5'],
    ['5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5', '5', '5', '5', '5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5'],
  ],
  [
    ['1', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '2'],
    ['!', 'w', '.', '.', '.', '.', '.', '.', '.', '.', 's', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '!'],
    ['!', '.', '(', '-', '-', ')', '.', '(', '-', '-', '-', ')', '.', '|', '|', '.', '(', '-', '-', '-', ')', '.', '(', '-', '-', ')', '.', '!'],
    ['!', '.', '|', ' ', ' ', '|', '.', '|', ' ', ' ', ' ', '|', '.', '|', '|', '.', '|', ' ', ' ', ' ', '|', '.', '|', ' ', ' ', '|', '.', '!'],
    ['!', '.', '{', '-', '-', '}', '.', '{', '-', '-', '-', '}', '.', '{', '}', '.', '{', '-', '-', '-', '}', '.', '{', '-', '-', '}', '.', '!'],
    ['!', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '!'],
    ['!', '.', '(', '-', '-', ')', '.', '(', ')', '.', '(', '-', '-', '-', '-', '-', '-', ')', '.', '(', ')', '.', '(', '-', '-', ')', '.', '!'],
    ['!', '.', '{', '-', '-', '}', '.', '|', '|', '.', '{', '-', '-', ')', '(', '-', '-', '}', '.', '|', '|', '.', '{', '-', '-', '}', '.', '!'],
    ['!', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '!'],
    ['4', '=', '=', '=', '=', '2', '.', '|', '{', '-', '-', ')', ' ', '|', '|', ' ', '(', '-', '-', '}', '|', '.', '1', '=', '=', '=', '=', '3'],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '(', '-', '-', '}', ' ', '{', '}', ' ', '{', '-', '-', ')', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', ' ', ' ', ' ', ' ', 'b', ' ', ' ', ' ', ' ', ' ', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', ' ', '1', '=', '=', 'd', '=', '=', '2', ')', ' ', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    ['=', '=', '=', '=', '=', '3', '.', '{', '}', ' ', '!', ' ', ' ', ' ', ' ', ' ', '!', '|', ' ', '{', '}', '.', '4', '=', '=', '=', '=', '='],
    [' ', ' ', ' ', ' ', ' ', ' ', '.', ' ', ' ', ' ', '!', 'i', '5', 'p', '5', 'c', '!', '|', ' ', ' ', ' ', '.', ' ', ' ', ' ', ' ', ' ', ' '],
    ['=', '=', '=', '=', '=', '2', '.', '(', ')', ' ', '4', '=', '=', '=', '=', '=', '3', '|', ' ', '(', ')', '.', '1', '=', '=', '=', '=', '='],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', ' ', '{', '-', '-', '-', '-', '-', '-', '}', ' ', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', ' ', '(', '-', '-', '-', '-', '-', '-', ')', ' ', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' '],
    ['1', '=', '=', '=', '=', '3', '.', '{', '}', ' ', '{', '-', '-', ')', '(', '-', '-', '}', ' ', '{', '}', '.', '4', '=', '=', '=', '=', '2'],
    ['!', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '!'],
    ['!', '.', '(', '-', '-', ')', '.', '(', '-', '-', '-', ')', '.', '|', '|', '.', '(', '-', '-', '-', ')', '.', '(', '-', '-', ')', '.', '!'],
    ['!', '.', '{', '-', ')', '|', '.', '{', '-', '-', '-', '}', '.', '{', '}', '.', '{', '-', '-', '-', '}', '.', '|', '(', '-', '}', '.', '!'],
    ['!', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '!'],
    ['!', '-', ')', '.', '|', '|', '.', '(', ')', '.', '(', '-', '-', '-', '-', '-', '-', ')', '.', '(', ')', '.', '|', '|', '.', '(', '-', '!'],
    ['!', '-', '}', '.', '{', '}', '.', '|', '|', '.', '{', '-', '-', ')', '(', '-', '-', '}', '.', '|', '|', '.', '{', '}', '.', '{', '-', '!'],
    ['!', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '!'],
    ['!', '.', '(', '-', '-', '-', '-', '}', '{', '-', '-', ')', '.', '|', '|', '.', '(', '-', '-', '}', '{', '-', '-', '-', '-', ')', '.', '!'],
    ['!', '.', '{', '-', '-', '-', '-', '-', '-', '-', '-', '}', '.', '{', '}', '.', '{', '-', '-', '-', '-', '-', '-', '-', '-', '}', '.', '!'],
    ['!', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '!'],
    ['4', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', '3'],
  ],
  [
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
    [' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' '],
    ['5', '5', '.', '(', '-', '-', '-', '-', '-', '-', '-', ')', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '(', '-', '-', '-', '-', '-', '-', '-', ')', '.', '5', '5'],
    ['5', '5', '.', '{', '-', '-', '-', '-', '-', '-', '-', '}', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '{', '-', '-', '-', '-', '-', '-', '-', '}', '.', '5', '5'],
    ['5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', ' ', 'b', ' ', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5'],
    ['5', '5', '.', '5', '.', '5', '.', '(', ')', '.', '(', ')', '.', '1', '=', '=', 'd', '=', '=', '2', '.', '(', ')', '.', '(', ')', '.', '5', '.', '5', '.', '5', '5'],
    [' ', ' ', '.', '.', '.', '.', 'w', '|', '|', '.', '|', '|', '.', '!', ' ', ' ', ' ', ' ', ' ', '!', '.', '|', '|', '.', '|', '|', 'w', '.', '.', '.', '.', ' ', ' '],
    ['5', '5', '.', '5', '.', '5', '.', '|', '|', '.', '|', '|', '.', '!', 'i', '5', 'p', '5', 'c', '!', '.', '|', '|', '.', '|', '|', '.', '5', '.', '5', '.', '5', '5'],
    ['5', '5', '.', '5', '.', '5', '.', '{', '}', '.', '{', '}', '.', '4', '=', '=', '=', '=', '=', '3', '.', '{', '}', '.', '{', '}', '.', '5', '.', '5', '.', '5', '5'],
    ['5', '5', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' ', ' ', 's', ' ', ' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '5', '5'],
    ['5', '5', '.', '(', '-', '-', '-', '-', '-', '-', '-', ')', '.', '(', '-', ')', ' ', '(', '-', ')', '.', '(', '-', '-', '-', '-', '-', '-', '-', ')', '.', '5', '5'],
    ['5', '5', '.', '{', '-', '-', '-', '-', '-', '-', '-', '}', '.', '{', '-', '}', ' ', '{', '-', '}', '.', '{', '-', '-', '-', '-', '-', '-', '-', '}', '.', '5', '5'],
    [' ', ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ' ', ' '],
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
    ['5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', ' ', '5', '5', '5', '5', '5', '5', '5'],
  ]

];

export function createImage(src) {
  const image = new Image();
  image.src = src;

  return image;
}

function createImages(sources, prefix = '') {
  const images = [];

  sources.forEach(src => {
    images.push(createImage(prefix + src));
  });

  return images;
}

export function generateMapElements(map, boundaries, pellets, powerUps, pacman, ghosts, level, startPositions, height_offset = 0) {
  let ghost = null;

  map.forEach((row, i) => {
    row.forEach((symbol, j) => {
      switch (symbol) {
        case 's':
          pacman.position = {
            x: Wall.width * j + Wall.width / 2,
            y: Wall.height * i + Wall.height / 2 + height_offset
          };
          pacman.velocity = {
            x: Pacman.speed,
            y: 0
          };
          pacman.direction = Directions.RIGHT
          pacman.images = createImages(
            ['pacman_right1.png', 'pacman_right2.png', 'pacman_left1.png', 'pacman_left2.png', 'pacman_up1.png', 'pacman_up2.png', 'pacman_down1.png', 'pacman_down2.png',
              'died/d1.png', 'died/d2.png', 'died/d3.png', 'died/d4.png', 'died/d5.png', 'died/d6.png', 'died/d7.png', 'died/d8.png', 'died/d9.png', 'died/d10.png',
              'died/d11.png', 'died/d12.png'],
            'images/pacman/'
          );
          startPositions.pacman = { ...pacman.position };
          break;
        case '-':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/middleLineHorizontal.png'),
            })
          );
          break;
        case '|':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/middleLineVertical.png'),
            })
          );
          break;
        case '(':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/cornerLine1.png'),
            })
          );
          break;
        case '{':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/cornerLine2.png'),
            })
          );
          break;
        case ')':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/cornerLine3.png'),
            })
          );
          break;
        case '}':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/cornerLine4.png'),
            })
          );
          break;
        case '=':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeHorizontal.png'),
            })
          );
          break;
        case '!':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeVertical.png')
            })
          );
          break;
        case '1':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeCorner1.png')
            })
          );
          break;
        case '2':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeCorner2.png')
            })
          );
          break;
        case '3':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeCorner3.png')
            })
          );
          break;
        case '4':
          boundaries.push(
            new Wall({
              position: {
                x: Wall.width * j,
                y: Wall.height * i + height_offset
              },
              image: createImage('./images/pipes/pipeCorner4.png')
            })
          );
          break;
          case '5':
            boundaries.push(
              new Wall({
                position: {
                  x: Wall.width * j,
                  y: Wall.height * i + height_offset
                },
                image: createImage('./images/pipes/block.png')
              })
            );
            break;
        case 'b': // ghosts
          ghost = new Ghost({
            name: 'Blinky',
            position: {
              x: Wall.width * j + Wall.width / 2,
              y: Wall.height * i + Wall.height / 2 + height_offset
            },
            velocity: {
              x: Ghost.speed,
              y: 0
            },
            color: 'red',
            direction: Directions.RIGHT,
            images: createImages(
              ['red_right1.png', 'red_right2.png', 'red_left1.png', 'red_left2.png', 'red_up1.png', 'red_up2.png', 'red_down1.png', 'red_down2.png', 'scared1.png', 'scared2.png',
                'dead1.png', 'dead2.png', 'dead3.png', 'dead4.png', 'scared3.png', 'scared4.png'],
              'images/ghosts/'
            ),
            mode: Mode.NORMAL
          });
          ghosts.push(ghost);
          startPositions.blinky = { ...ghost.position };
          break;
        case 'p': // ghosts
          ghost = new Ghost({
            name: 'Pinky',
            position: {
              x: Wall.width * j + Wall.width / 2,
              y: Wall.height * i + Wall.height / 2 + height_offset
            },
            velocity: {
              x: Ghost.speed,
              y: 0
            },
            color: 'pink',
            direction: Directions.RIGHT,
            images: createImages(
              ['pink_right1.png', 'pink_right2.png', 'pink_left1.png', 'pink_left2.png', 'pink_up1.png', 'pink_up2.png', 'pink_down1.png', 'pink_down2.png', 'scared1.png', 'scared2.png',
                'dead1.png', 'dead2.png', 'dead3.png', 'dead4.png', 'scared3.png', 'scared4.png'],
              'images/ghosts/'
            ),
            mode: Mode.HOME
          })
          ghosts.push(ghost);
          startPositions.pinky = { ...ghost.position };
          break;
        case 'i': // ghosts
          ghost = new Ghost({
            name: 'Inky',
            position: {
              x: Wall.width * j + Wall.width / 2,
              y: Wall.height * i + Wall.height / 2 + height_offset
            },
            velocity: {
              x: Ghost.speed,
              y: 0
            },
            color: 'cyan',
            direction: Directions.RIGHT,
            images: createImages(
              ['cyan_right1.png', 'cyan_right2.png', 'cyan_left1.png', 'cyan_left2.png', 'cyan_up1.png', 'cyan_up2.png', 'cyan_down1.png', 'cyan_down2.png', 'scared1.png', 'scared2.png',
                'dead1.png', 'dead2.png', 'dead3.png', 'dead4.png', 'scared3.png', 'scared4.png'],
              'images/ghosts/'
            ),
            mode: Mode.HOME
          });
          ghosts.push(ghost);
          startPositions.inky = { ...ghost.position };
          break;
        case 'c': // ghosts
          ghost = new Ghost({
            name: 'Clyde',
            position: {
              x: Wall.width * j + Wall.width / 2,
              y: Wall.height * i + Wall.height / 2 + height_offset
            },
            velocity: {
              x: Ghost.speed,
              y: 0
            },
            color: 'orange',
            direction: Directions.RIGHT,
            images: createImages(
              ['orange_right1.png', 'orange_right2.png', 'orange_left1.png', 'orange_left2.png', 'orange_up1.png', 'orange_up2.png', 'orange_down1.png', 'orange_down2.png', 'scared1.png', 'scared2.png',
                'dead1.png', 'dead2.png', 'dead3.png', 'dead4.png', 'scared3.png', 'scared4.png'],
              'images/ghosts/'
            ),
            mode: Mode.HOME
          }),
            ghosts.push(ghost);
          startPositions.clyde = { ...ghost.position };
          break;
        case '.':
          pellets.push(
            new Pellet({
              position: {
                x: j * Wall.width + Wall.width / 2,
                y: i * Wall.height + Wall.height / 2 + height_offset
              }
            })
          )
          break
        case 'w':
          powerUps.push(
            new PowerUp({
              position: {
                x: j * Wall.width + Wall.width / 2,
                y: i * Wall.height + Wall.height / 2 + height_offset
              }
            })
          )
          break
        case 'd':
          level.door = new Wall({
            position: {
              x: Wall.width * j,
              y: Wall.height * i + height_offset
            },
            image: createImage('./images/pipes/door.png')
          });

          boundaries.push(level.door);
          break;
      }
    })
  });
}